{"version":3,"sources":["serviceWorker.js","components/TabNav.jsx","containers/View.jsx","App.jsx","http/api.js","components/List.jsx","containers/Home.jsx","containers/Collect.jsx","store/reducer.js","store/index.js","containers/My.jsx","containers/Content.jsx","containers/Redux.jsx","components/Partake.jsx","router/index.js","index.js"],"names":["Boolean","window","location","hostname","match","TabNav","props","state","selectedTab","unselectedTintColor","tintColor","barTintColor","tabBarPosition","prerenderingSiblingsNumber","Item","title","key","icon","style","width","height","background","selectedIcon","selected","this","onPress","handleTabHome","bind","routerChildren","handleTabLike","handleTabMy","setState","pathname","history","push","Component","withRouter","View","className","mode","type","onLeftClick","goback","rightContent","goBack","App","main","indexOf","children","id","axios","defaults","baseURL","timeout","headers","post","url","params","Promise","resolve","reject","get","then","res","catch","err","List","dataSource","DataSource","rowHasChanged","row1","row2","cloneWithRows","isLoading","pageCurrent","listData","getFlag","collectFlag","overflow","renderFooter","textAlign","text","renderRow","dataRow","onClick","listClick","tab","author","loginname","create_at","visit_count","reply_count","pageSize","onScroll","console","log","scrollRenderAheadDistance","onEndReachedThreshold","onEndReached","index","self","getUrl","getType","page","limit","data","success","newPageCurrent","newListData","concat","info","error","offline","row","Home","Collect","defaultState","number","login_name","store","createStore","action","newState","JSON","parse","stringify","My","handleStoreChange","getState","subscribe","avatar","src","alt","arrow","goRedux","goPublic","goReplies","goLike","loginName","avatar_url","Content","artice","replies","loading","loadingCompont","repliesCompont","map","item","dangerouslySetInnerHTML","__html","content","Redux","percent","position","aria-hidden","disabled","add","sub","set","dispatch","Brief","Partake","list","display","extra","last_reply_at","align","thumb","multipleLine","recent_topics","recent_replies","RouterRoot","path","exact","component","render","to","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6456e50c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n  ","import React, { Component } from 'react';\r\nimport { TabBar } from 'antd-mobile';\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass TabNav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedTab: '/home'\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <TabBar\r\n          unselectedTintColor=\"#949494\"\r\n          tintColor=\"#666666\"\r\n          barTintColor=\"white\"\r\n          tabBarPosition=\"bottom\"\r\n          prerenderingSiblingsNumber={0}\r\n        >\r\n        <TabBar.Item\r\n          title=\"主页\"\r\n          key=\"home\"\r\n          icon={<div style={{\r\n            width: '22px',\r\n            height: '22px',\r\n            background: 'url(http://img.qinxus.com/icons_home.svg) center center /  21px 21px no-repeat' }}\r\n          />\r\n          }\r\n          selectedIcon={<div style={{\r\n            width: '22px',\r\n            height: '22px',\r\n            background: 'url(http://img.qinxus.com/icons_home_fill.svg) center center /  21px 21px no-repeat' }}\r\n          />\r\n          }\r\n          selected={this.state.selectedTab === '/home' || this.state.selectedTab === '/'}\r\n          onPress={this.handleTabHome.bind(this)}\r\n        >\r\n          {(this.state.selectedTab === \"/home\" || this.state.selectedTab === \"/\") ? this.props.routerChildren : null}\r\n        </TabBar.Item>\r\n        <TabBar.Item\r\n          title=\"收藏\"\r\n          key=\"collect\"\r\n          icon={\r\n            <div style={{\r\n              width: '22px',\r\n              height: '22px',\r\n              background: 'url(http://img.qinxus.com/icons_likes.svg) center center /  21px 21px no-repeat' }}\r\n            />\r\n          }\r\n          selectedIcon={\r\n            <div style={{\r\n              width: '22px',\r\n              height: '22px',\r\n              background: 'url(http://img.qinxus.com/icons_likes_fill.svg) center center /  21px 21px no-repeat' }}\r\n            />\r\n          }\r\n          selected={this.state.selectedTab === '/collect'}\r\n          onPress={this.handleTabLike.bind(this)}\r\n        >\r\n          {this.state.selectedTab === \"/collect\" ? this.props.routerChildren : null}\r\n        </TabBar.Item>\r\n        <TabBar.Item\r\n          title=\"我\"\r\n          key=\"my\"\r\n          icon={\r\n            <div style={{\r\n              width: '22px',\r\n              height: '22px',\r\n              background: 'url(http://img.qinxus.com/icons_my.svg) center center /  21px 21px no-repeat' }}\r\n            />\r\n          }\r\n          selectedIcon={\r\n            <div style={{\r\n              width: '22px',\r\n              height: '22px',\r\n              background: 'url(http://img.qinxus.com/icons_my_fill.svg) center center /  21px 21px no-repeat' }}\r\n            />\r\n          }\r\n          selected={this.state.selectedTab === '/my'}\r\n          onPress={this.handleTabMy.bind(this)}\r\n        >\r\n          {this.state.selectedTab === \"/my\" ? this.props.routerChildren : null}\r\n        </TabBar.Item>\r\n      </TabBar>\r\n    );\r\n  }\r\n  componentDidMount(){\r\n    const self = this;\r\n    // 初始化设置路由\r\n    self.setState({\r\n      selectedTab: self.props.location.pathname\r\n    });\r\n  }\r\n  componentWillUnmount(){\r\n    this.handleTabHome = null;\r\n    this.handleTabLike = null;\r\n    this.handleTabMy = null;\r\n  }\r\n  handleTabHome(){\r\n    // 跳转 home\r\n    this.props.history.push(\"/home\");\r\n  }\r\n  handleTabLike(){\r\n    // 跳转 collect\r\n    this.props.history.push(\"/collect\");\r\n  }\r\n  handleTabMy(){\r\n    // 跳转 my\r\n    this.props.history.push(\"/my\");\r\n  }\r\n}\r\n\r\nexport default withRouter(TabNav);\r\n","import React, { Component } from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport { NavBar, Icon } from 'antd-mobile';\r\n\r\n\r\nclass View extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"view\">\r\n        <NavBar\r\n          mode=\"light\"\r\n          className=\"view-nav\"\r\n          icon={<Icon type=\"left\" />}\r\n          onLeftClick={() => this.goback()}\r\n          rightContent={[\r\n            <Icon key=\"1\" type=\"ellipsis\" />\r\n          ]}\r\n        >View</NavBar>\r\n        <div className=\"view-box\">\r\n          {this.props.routerChildren}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  goback(){\r\n    this.props.history.goBack();\r\n  }\r\n}\r\n\r\nexport default withRouter(View);\r\n","import React, { Component } from 'react';\r\nimport TabNav from './components/TabNav'\r\nimport View from './containers/View'\r\nimport {withRouter } from \"react-router\";\r\n\r\nclass App extends Component {\r\n  render(){\r\n    const pathname = this.props.location.pathname;\r\n    const main = (pathname.indexOf('/view') !== -1) ? <View routerChildren={this.props.children}></View> : <TabNav routerChildren={this.props.children}></TabNav>\r\n    return (\r\n      <div id=\"App\" className=\"App\" key={this.props.location.key}>\r\n        {main}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(App);\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://cnodejs.org/api/v1/';\r\naxios.defaults.timeout = 10000;\r\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n\r\n/**\r\n * get请求\r\n * @method get\r\n * @param {url, params} 请求地址，请求参数\r\n */\r\nlet get = (url, params) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(url, params)\r\n      .then(res => {\r\n        resolve(res);\r\n      })\r\n      .catch(err => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n/**\r\n * post请求\r\n * @method post\r\n * @param {url, params} 请求地址，请求参数，是否需要加载层\r\n */\r\nlet post = (url, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(url, data)\r\n      .then(res => {\r\n        resolve(res);\r\n      })\r\n      .catch(err => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport default { get, post };","import React, { Component } from 'react';\r\nimport axios from '../http/api'\r\nimport { ListView, Toast, ActivityIndicator } from 'antd-mobile';\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nclass List extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    const dataSource = new ListView.DataSource({\r\n      rowHasChanged: (row1, row2) => row1 !== row2,\r\n    })\r\n\r\n    this.state = {\r\n      dataSource: dataSource.cloneWithRows({}),\r\n      isLoading: true,\r\n      pageCurrent: 1,\r\n      listData: [],\r\n      getFlag: true,  // 防止index 多次调用\r\n      collectFlag: true   // 收藏主题没有分页，只需要加载一次\r\n    }\r\n  }\r\n  render(){\r\n    const row = (dataRow) => {\r\n      return (\r\n        <div className=\"list-item\" onClick={() => this.listClick(dataRow)}>\r\n          <div className=\"box\">\r\n            <div className=\"box-header\">\r\n              <span className=\"type\">{dataRow.tab?dataRow.tab:'test'}</span>\r\n              <span> · </span>\r\n              <span className=\"author\">{dataRow.author.loginname}</span>\r\n              <span> · </span>\r\n              <span>{dataRow.create_at}</span>\r\n            </div>\r\n            <div className=\"box-body\">\r\n              {dataRow.title}\r\n            </div>\r\n            <div className=\"box-footer\">\r\n              <span className=\"item-box\">\r\n                <i className=\"icon iconfont\">&#xe73d;</i>\r\n                <span className=\"number\">{dataRow.visit_count}</span>\r\n              </span>\r\n              <span className=\"item-box\">\r\n                <i className=\"icon iconfont\">&#xe731;</i>\r\n                <span className=\"number\">{dataRow.reply_count}</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <ListView\r\n        style={{\r\n          height: '100%',\r\n          overflow: 'auto'\r\n        }}\r\n        dataSource={this.state.dataSource} // 渲染的数据源\r\n        renderFooter={() => (<div style={{textAlign: 'center'}}>\r\n          {this.state.isLoading ? <ActivityIndicator className=\"justify-content\" text=\"Loading...\"/>: '——我也是有底线的——'}\r\n        </div>)}\r\n        renderRow={row} // 单条数据\r\n        pageSize={20} // 每次渲染的行数\r\n        onScroll={() => { console.log('scroll'); }}\r\n        scrollRenderAheadDistance={500}\r\n        onEndReachedThreshold={10}\r\n        onEndReached={this.index.bind(this)} // 上拉加载事件\r\n      />\r\n    )\r\n  }\r\n  componentDidMount(){\r\n    this.index();\r\n  }\r\n  index(){\r\n    const self = this;\r\n    if(!self.state.getFlag || !self.state.collectFlag){\r\n      return;\r\n    };\r\n    self.setState({\r\n      isLoading: true,\r\n      getFlag: false\r\n    });\r\n    let getUrl = '/';\r\n    let params = {}\r\n    if(this.props.getType === 'all'){ // 全部主题\r\n      getUrl = \"/topics\";\r\n      params = {\r\n        page: self.state.pageCurrent, \r\n        limit: 20\r\n      };\r\n    } else if(this.props.getType === 'collect') { // 收藏主题\r\n      getUrl = \"/topic_collect/QxGh\"\r\n    };\r\n    axios.get(getUrl, {params})\r\n    .then((res)=>{\r\n      if(res.data.success){\r\n        let newPageCurrent = self.state.pageCurrent + 1;\r\n        let newListData = self.state.listData.concat(res.data.data);\r\n        self.setState({\r\n          pageCurrent: newPageCurrent,\r\n          listData: newListData\r\n        });\r\n        self.setState({\r\n          dataSource: self.state.dataSource.cloneWithRows(self.state.listData)\r\n        });\r\n        if(this.props.getType === 'collect') {\r\n          self.setState({\r\n            collectFlag: false\r\n          });\r\n        };\r\n      } else {\r\n        Toast.info('数据获取失败！');\r\n      };\r\n      self.setState({\r\n        isLoading: false,\r\n        getFlag: true\r\n      });\r\n    })\r\n    .catch((error)=>{\r\n      Toast.offline('服务器开小差了！');\r\n    })\r\n  }\r\n  listClick(row){\r\n    let id = row.id;\r\n    this.props.history.push({pathname:\"/view/content\",state: {id}});\r\n  }\r\n}\r\n\r\nexport default withRouter(List);","import React, { Component } from 'react';\r\nimport List from '../components/List'\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"home-container\" className=\"container\">\r\n        <List getType=\"all\"></List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport List from '../components/List'\r\n\r\nclass Collect extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"like-container\" className=\"container\">\r\n        <List getType=\"collect\"></List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Collect;\r\n","const defaultState = {\r\n  number: 30,\r\n  login_name: 'QxGH'\r\n};\r\n\r\n//reducer可以接收state，但是绝不能修改state\r\n// reducer必须是纯函数\r\n//纯函数：给固定的输入，一定有固定的输出（不能有不固定的日期函数），不会有副作用（改变参数的值）\r\nexport default (state = defaultState, action) => {\r\n  const newState = JSON.parse(JSON.stringify(state)); //简单的深拷贝\r\n\r\n  switch(action.type) {\r\n    case 'add_number':\r\n      newState.number++;\r\n      break;\r\n    case 'sub_number':\r\n      newState.number--;\r\n      break;\r\n    case 'set_number': \r\n      newState.number = action.number;\r\n      break;\r\n    default:\r\n      return newState;\r\n  };\r\n\r\n  return newState;\r\n}","import {createStore} from 'redux';\r\nimport reducer from './reducer';\r\n \r\n \r\n//1-store是唯一的\r\n//2-只有store才能改变自己的内容（state）\r\n//3-reducer必须是纯函数\r\nconst store = createStore(\r\n    reducer,\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    // /如果安装了redeux devtools扩展这个工具（谷歌商店里下载），则在控制台里使用这个方法（为了调试redux）\r\n);\r\nexport default store;","import React, { Component } from 'react';\r\nimport store from '../store/index';\r\nimport axios from '../http/api';\r\nimport { Toast, List, WingBlank } from 'antd-mobile';\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst Item = List.Item;\r\n\r\nclass My extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    // this.state = store.getState();  //获取store里的所有关于state的数据\r\n    //监听store里面的变化，只要一变化\r\n    //只要store里面的数据发生改变，则立即执行subscribe函数里的函数\r\n    store.subscribe(this.handleStoreChange);\r\n    this.state = {\r\n      avatar: '',\r\n      store: store.getState()\r\n    }\r\n  }\r\n  render() {\r\n    let avatar = null;\r\n    if(this.state.avatar){\r\n      avatar = <img className=\"avatar\" src={this.state.avatar} alt=\"头像\" />\r\n    }\r\n    return (\r\n      <div id=\"my-container\">\r\n        <div className=\"user-card\">\r\n          <div className=\"card-box\">\r\n            <div className=\"avatar-box\">\r\n              <div className=\"avatar-bg\">\r\n                {avatar}\r\n              </div>\r\n            </div>\r\n            <div className=\"name-box\">\r\n              <span className=\"name\">{this.state.store.login_name}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <WingBlank>\r\n          <List className=\"my-list\">\r\n            <Item arrow=\"horizontal\" onClick={this.goRedux.bind(this)}>Redux</Item>\r\n            <Item arrow=\"horizontal\" onClick={this.goPublic.bind(this)}>最新发布</Item>\r\n            <Item arrow=\"horizontal\" onClick={this.goReplies.bind(this)}>最近评论</Item>\r\n            <Item arrow=\"horizontal\" onClick={this.goLike.bind(this)}>我的收藏</Item>\r\n          </List>\r\n        </WingBlank>\r\n      </div>\r\n    );\r\n  }\r\n  //reducer返回newState之后，store传递newState给组件\r\n  handleStoreChange = () => {\r\n    this.setState({\r\n      store: store.getState()\r\n    });\r\n    // 感知store发生变化之后，从store里获取最新的数据，然后进行设置\r\n  };\r\n  componentDidMount(){\r\n    this.index();\r\n  };\r\n  index(){\r\n    let loginName = this.state.store.login_name;\r\n    let url = '/user/'+loginName\r\n    axios.get(url)\r\n    .then((res)=>{\r\n      if(res.data.success === true){\r\n        this.setState({\r\n          avatar: res.data.data.avatar_url\r\n        })\r\n      } else {\r\n        Toast.info('数据获取失败！');\r\n      };\r\n    })\r\n    .catch((error)=>{\r\n      Toast.offline('服务器开小差了！');\r\n    })\r\n  }\r\n  goRedux(){\r\n    this.props.history.push(\"/view/redux\");\r\n  }\r\n  goPublic(){\r\n    this.props.history.push({pathname:\"/view/partake\", state: {getType: 'public'}});\r\n  }\r\n  goReplies(){\r\n    this.props.history.push({pathname:\"/view/partake\", state: {getType: 'replies'}});\r\n  }\r\n  goLike(){\r\n    this.props.history.push(\"/collect\");\r\n  }\r\n}\r\n\r\nexport default withRouter(My);\r\n","import React, { Component } from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport axios from '../http/api';\r\nimport { Toast, ActivityIndicator } from 'antd-mobile';\r\n\r\n\r\nclass Content extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      artice: {},\r\n      loginname: '',\r\n      replies: [],\r\n      loading: true\r\n    }\r\n  }\r\n  render() {\r\n    const loadingCompont = <ActivityIndicator className=\"justify-content\" text=\"Loading...\" />\r\n    const repliesCompont = \r\n      <div className=\"replies-box\">\r\n        <ul className=\"list\">\r\n          {\r\n            this.state.replies.map((item,index)=>(\r\n              <li className=\"item\" key={index}>\r\n                <div className=\"info\">{item.author.loginname} <span className=\"date\">{item.create_at}</span> </div>\r\n                <div className=\"message\" dangerouslySetInnerHTML={{__html: item.content}}></div>\r\n              </li>\r\n            ))\r\n          }\r\n        </ul>\r\n      </div>\r\n    return (\r\n      <div className=\"content\">\r\n        {this.state.loading?loadingCompont:null}\r\n        <h1>{this.state.artice.title}</h1>\r\n        <div className=\"artice-info\">\r\n          <span className=\"info-item\">{this.state.loginname}</span>\r\n          <span className=\"info-item\">{this.state.artice.create_at}</span>\r\n        </div>\r\n        <div className=\"content-box\">\r\n          <div className=\"content\" dangerouslySetInnerHTML={{__html: this.state.artice.content}}></div>\r\n        </div>\r\n        {!this.state.loading?repliesCompont:null}\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount(){\r\n    this.index();\r\n  }\r\n  index(){\r\n    const self = this;\r\n    self.setState({\r\n      loading: true\r\n    })\r\n    let id = self.props.location.state.id;\r\n    axios.get('/topic/'+id)\r\n    .then((res)=>{\r\n      if(res.data.success){\r\n        let data = res.data.data;\r\n        self.setState({\r\n          artice: data,\r\n          loginname: data.author.loginname,\r\n          replies: data.replies\r\n        })\r\n      } else {\r\n        Toast.info('数据获取失败！');\r\n      };\r\n      self.setState({\r\n        loading: false\r\n      });\r\n    })\r\n    .catch((error)=>{\r\n      Toast.offline('服务器开小差了！');\r\n    })\r\n  }\r\n}\r\n\r\nexport default withRouter(Content);\r\n","import React, { Component } from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport store from '../store/index';\r\nimport { Progress, Button, WhiteSpace } from 'antd-mobile';\r\n\r\nclass Redux extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    // this.state = store.getState();  //获取store里的所有关于state的数据\r\n    //监听store里面的变化，只要一变化\r\n    //只要store里面的数据发生改变，则立即执行subscribe函数里的函数\r\n    store.subscribe(this.handleStoreChange);\r\n    this.state = {\r\n      store: store.getState()\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"redux\">\r\n        <WhiteSpace />\r\n        <div className=\"progress-box\">\r\n          <div className=\"progress\"><Progress percent={this.state.store.number} position=\"normal\" /></div>\r\n          <div aria-hidden=\"true\">{this.state.store.number}%</div>\r\n        </div>\r\n        <WhiteSpace />\r\n        <Button type=\"primary\" disabled={this.state.store.number >= 100} onClick={this.add}>Add</Button>\r\n        <WhiteSpace />\r\n        <Button type=\"warning\" disabled={this.state.store.number <= 0} onClick={this.sub}>Sub</Button>\r\n        <WhiteSpace />\r\n        <Button onClick={this.set}>Set-60</Button>\r\n      </div>\r\n    );\r\n  }\r\n  //reducer返回newState之后，store传递newState给组件\r\n  handleStoreChange = () => {\r\n    this.setState({\r\n      store: store.getState()\r\n    });\r\n    // 感知store发生变化之后，从store里获取最新的数据，然后进行设置\r\n  }\r\n  add(){\r\n    store.dispatch({\r\n      type: 'add_number'\r\n    })\r\n  }\r\n  sub(){\r\n    store.dispatch({\r\n      type: 'sub_number'\r\n    })\r\n  }\r\n  set(){\r\n    store.dispatch({\r\n      type: 'set_number',\r\n      number: 60\r\n    })\r\n  }\r\n}\r\n\r\nexport default withRouter(Redux);\r\n","import React, {Component} from 'react';\r\nimport { List, Toast, ActivityIndicator } from 'antd-mobile';\r\nimport axios from '../http/api';\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst Item = List.Item;\r\nconst Brief = Item.Brief;\r\n\r\nclass Partake extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      getType: '',\r\n      loading: true\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.setState({\r\n      getType: this.props.location.state.getType\r\n    });\r\n    this.index();\r\n  }\r\n  render(){\r\n    const loadingCompont = <ActivityIndicator className=\"justify-content\" text=\"Loading...\" />\r\n    return (\r\n      <div className=\"partake\">\r\n        {this.state.loading?loadingCompont:null}\r\n        <List className=\"partake-list\" style={this.state.loading?{display: 'none'}:{display: 'block'}}>\r\n          {\r\n            this.state.list.map((item, index)=>(\r\n              <Item key={item.id} extra={item.last_reply_at} align=\"top\" thumb={item.author.avatar_url} multipleLine onClick={() => this.listClick(item.id)}> \r\n                {item.title} <Brief>{item.author.loginname}</Brief>\r\n              </Item>\r\n            ))\r\n          }\r\n        </List>\r\n      </div>\r\n    )\r\n  }\r\n  index(){\r\n    const self = this;\r\n    self.setState({\r\n      loading: true\r\n    });\r\n    axios.get('/user/QxGH')\r\n    .then((res)=>{\r\n      if(self.state.getType === 'public'){\r\n        self.setState({\r\n          list: res.data.data.recent_topics\r\n        })\r\n      } else if(self.state.getType === 'replies') {\r\n        self.setState({\r\n          list: res.data.data.recent_replies\r\n        })\r\n      };\r\n      self.setState({\r\n        loading: false\r\n      });\r\n    })\r\n    .catch((error)=>{\r\n      self.setState({\r\n        loading: false\r\n      });\r\n      Toast.offline('服务器开小差了！');\r\n    })\r\n  }\r\n  listClick(id){\r\n    this.props.history.push({pathname:\"/view/content\",state: {id}});\r\n  }\r\n}\r\n\r\nexport default withRouter(Partake);","\r\nimport App from './../App';\r\nimport Home from '../containers/Home';\r\nimport Collect from '../containers/Collect';\r\nimport My from '../containers/My';\r\nimport View from '../containers/View';\r\nimport Content from '../containers/Content';\r\nimport Redux from '../containers/Redux';\r\nimport Partake from '../components/Partake'\r\n\r\nimport React from 'react';\r\nimport { Switch, Route, BrowserRouter, Redirect } from 'react-router-dom';\r\n\r\nconst RouterRoot = () => (\r\n  <BrowserRouter>\r\n    <App>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home}/>\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/collect\" component={Collect} />\r\n        <Route path=\"/my\" component={My} />\r\n        <Route path=\"/view\" exact component={View} />\r\n        <Route path=\"/view/content\"  component={Content} />\r\n        <Route path=\"/view/redux\"  component={Redux} />\r\n        <Route path=\"/view/partake\"  component={Partake} />\r\n        <Route path=\"/\" render={() => {return <Redirect to=\"/\" />}} />\r\n      </Switch>\r\n    </App>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default RouterRoot;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/common.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport RouterRoot from './router/index';\r\n\r\n// import Vconsole from 'vconsole';\r\n// const newVconsole = new Vconsole();\r\n// console.log('vConsole version:'+newVconsole.version);\r\n\r\nReactDOM.render(\r\n  <RouterRoot></RouterRoot>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}