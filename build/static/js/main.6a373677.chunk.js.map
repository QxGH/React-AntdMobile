{"version":3,"sources":["serviceWorker.js","components/Footer.js","containers/View.js","App.js","components/List.js","containers/Home.js","containers/Like.js","store/reducer.js","store/index.js","containers/My.js","router/index.js","index.js"],"names":["Boolean","window","location","hostname","match","Footer","props","state","selectedTab","unselectedTintColor","tintColor","barTintColor","tabBarPosition","prerenderingSiblingsNumber","Item","title","key","icon","style","width","height","background","selectedIcon","selected","this","onPress","handleTabHome","bind","routerParmes","children","handleTabLike","handleTabMy","setState","history","pathname","push","Component","View","artice","loginname","className","mode","type","onLeftClick","goback","rightContent","create_at","dangerouslySetInnerHTML","__html","content","index","self","id","axios","get","then","res","data","success","author","catch","error","offline","goBack","withRouter","App","main","List","dataSource","DataSource","rowHasChanged","row1","row2","cloneWithRows","isLoading","pageCurrent","listData","overflow","renderFooter","textAlign","renderRow","dataRow","onClick","listClick","tab","visit_count","reply_count","pageSize","scrollRenderAheadDistance","scrollEventThrottle","onEndReachedThreshold","onEndReached","getUrl","params","getType","page","limit","newPageCurrent","newListData","concat","row","Home","Hot","defaultState","number","login_name","store","createStore","action","newState","JSON","parse","stringify","My","handleStoreChange","getState","subscribe","avatar","src","alt","url","console","log","avatar_url","alert","RouterRoot","path","exact","component","Like","render","to","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a373677.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport { TabBar } from 'antd-mobile';\r\n\r\nclass Footer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedTab: '/home'\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <TabBar\r\n          unselectedTintColor=\"#949494\"\r\n          tintColor=\"#666666\"\r\n          barTintColor=\"white\"\r\n          tabBarPosition=\"bottom\"\r\n          prerenderingSiblingsNumber={0}\r\n        >\r\n        <TabBar.Item\r\n          title=\"主页\"\r\n          key=\"home\"\r\n          icon={<div style={{\r\n            width: '22px',\r\n            height: '22px',\r\n            background: 'url(http://img.qinxus.com/icons_home.svg) center center /  21px 21px no-repeat' }}\r\n          />\r\n          }\r\n          selectedIcon={<div style={{\r\n            width: '22px',\r\n            height: '22px',\r\n            background: 'url(http://img.qinxus.com/icons_home_fill.svg) center center /  21px 21px no-repeat' }}\r\n          />\r\n          }\r\n          selected={this.state.selectedTab === '/home' || this.state.selectedTab === '/'}\r\n          onPress={this.handleTabHome.bind(this)}\r\n        >\r\n          {this.state.selectedTab === \"/home\" || this.state.selectedTab === \"/\" ? this.props.routerParmes.children : null}\r\n        </TabBar.Item>\r\n        <TabBar.Item\r\n          title=\"喜欢\"\r\n          key=\"like\"\r\n          icon={\r\n            <div style={{\r\n              width: '22px',\r\n              height: '22px',\r\n              background: 'url(http://img.qinxus.com/icons_likes.svg) center center /  21px 21px no-repeat' }}\r\n            />\r\n          }\r\n          selectedIcon={\r\n            <div style={{\r\n              width: '22px',\r\n              height: '22px',\r\n              background: 'url(http://img.qinxus.com/icons_likes_fill.svg) center center /  21px 21px no-repeat' }}\r\n            />\r\n          }\r\n          selected={this.state.selectedTab === '/like'}\r\n          onPress={this.handleTabLike.bind(this)}\r\n        >\r\n          {this.state.selectedTab === \"/like\" ? this.props.routerParmes.children : null}\r\n        </TabBar.Item>\r\n        <TabBar.Item\r\n          title=\"我\"\r\n          key=\"my\"\r\n          icon={\r\n            <div style={{\r\n              width: '22px',\r\n              height: '22px',\r\n              background: 'url(http://img.qinxus.com/icons_my.svg) center center /  21px 21px no-repeat' }}\r\n            />\r\n          }\r\n          selectedIcon={\r\n            <div style={{\r\n              width: '22px',\r\n              height: '22px',\r\n              background: 'url(http://img.qinxus.com/icons_my_fill.svg) center center /  21px 21px no-repeat' }}\r\n            />\r\n          }\r\n          selected={this.state.selectedTab === '/my'}\r\n          onPress={this.handleTabMy.bind(this)}\r\n        >\r\n          {this.state.selectedTab === \"/my\" ? this.props.routerParmes.children : null}\r\n        </TabBar.Item>\r\n      </TabBar>\r\n    );\r\n  }\r\n  componentDidMount(){\r\n    const self = this;\r\n    // 初始化设置路由\r\n    self.setState({\r\n      selectedTab: self.props.routerParmes.history.location.pathname\r\n    });\r\n  }\r\n  handleTabHome(){\r\n    // 跳转 home\r\n    this.props.routerParmes.history.push('/home')\r\n  }\r\n  handleTabLike(){\r\n    // 跳转 like\r\n    this.props.routerParmes.history.push('/like')\r\n  }\r\n  handleTabMy(){\r\n    // 跳转 my\r\n    this.props.routerParmes.history.push('/my')\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport { Toast, NavBar, Icon } from 'antd-mobile';\r\n\r\n\r\nclass View extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      artice: {},\r\n      loginname: ''\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"view\">\r\n        <NavBar\r\n          mode=\"light\"\r\n          className=\"view-nav\"\r\n          icon={<Icon type=\"left\" />}\r\n          onLeftClick={() => this.goback()}\r\n          rightContent={[\r\n            <Icon key=\"1\" type=\"ellipsis\" />\r\n          ]}\r\n        >主题详情</NavBar>\r\n        <div className=\"view-box\">\r\n          <h1>{this.state.artice.title}</h1>\r\n          <div className=\"artice-info\">\r\n            <span className=\"info-item\">{this.state.loginname}</span>\r\n            <span className=\"info-item\">{this.state.artice.create_at}</span>\r\n          </div>\r\n          <div className=\"content-box\">\r\n            <div className=\"content\" dangerouslySetInnerHTML={{__html: this.state.artice.content}}></div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount(){\r\n    this.index();\r\n  }\r\n  index(){\r\n    const self = this;\r\n    let id = self.props.location.state.id;\r\n    axios.get('https://cnodejs.org/api/v1/topic/'+id)\r\n    .then((res)=>{\r\n      if(res.data.success){\r\n        let data = res.data.data;\r\n        self.setState({\r\n          artice: data,\r\n          loginname: data.author.loginname\r\n        })\r\n      }\r\n    })\r\n    .catch((error)=>{\r\n      Toast.offline('服务器出小差了！', 3);\r\n    })\r\n  }\r\n  goback(){\r\n    this.props.history.goBack();\r\n  }\r\n}\r\n\r\nexport default withRouter(View);\r\n","import React, { Component } from 'react';\nimport Footer from './components/Footer'\nimport View from './containers/View'\nimport {withRouter } from \"react-router\";\n\n\nclass App extends Component {\n  render(){\n    const pathname = this.props.location.pathname;\n    const main = (pathname === '/view') ? <View></View> : <Footer routerParmes={this.props}></Footer>\n    return (\n      <div id=\"App\" className=\"App\" key={this.props.location.key}>\n        {main}\n      </div>\n    )\n  }\n}\n\n\nexport default withRouter(App);\n","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport { ListView, Toast } from 'antd-mobile';\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nclass List extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    const dataSource = new ListView.DataSource({\r\n      rowHasChanged: (row1, row2) => row1 !== row2,\r\n    })\r\n\r\n    this.state = {\r\n      dataSource: dataSource.cloneWithRows({}),\r\n      isLoading: true,\r\n      pageCurrent: 1,\r\n      listData: []\r\n    }\r\n  }\r\n  render(){\r\n    const row = (dataRow) => {\r\n      return (\r\n        <div className=\"list-item\" onClick={() => this.listClick(dataRow)}>\r\n          <div className=\"box\">\r\n            <div className=\"box-header\">\r\n              <span className=\"type\">{dataRow.tab?dataRow.tab:'test'}</span>\r\n              <span> · </span>\r\n              <span className=\"author\">{dataRow.author.loginname}</span>\r\n              <span> · </span>\r\n              <span>{dataRow.create_at}</span>\r\n            </div>\r\n            <div className=\"box-body\">\r\n              {dataRow.title}\r\n            </div>\r\n            <div className=\"box-footer\">\r\n              <span className=\"item-box\">\r\n                <i className=\"icon iconfont\">&#xe73d;</i>\r\n                <span className=\"number\">{dataRow.visit_count}</span>\r\n              </span>\r\n              <span className=\"item-box\">\r\n                <i className=\"icon iconfont\">&#xe731;</i>\r\n                <span className=\"number\">{dataRow.reply_count}</span>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <ListView\r\n        style={{\r\n          height: '100%',\r\n          overflow: 'auto'\r\n        }}\r\n        dataSource={this.state.dataSource} // 渲染的数据源\r\n        renderFooter={() => (<div style={{textAlign: 'center'}}>\r\n          {this.state.isLoading ? '骚等...' : '—— 我也是有底线的 ——'}\r\n        </div>)}\r\n        renderRow={row} // 单条数据\r\n        pageSize={20} // 每次渲染的行数\r\n        scrollRenderAheadDistance={800} // 当一个行接近屏幕范围多少像素之内的时候，就开始渲染这一行\r\n        scrollEventThrottle={20} // 控制在滚动过程中，scroll事件被调用的频率\r\n        onEndReachedThreshold={800} // 调用onEndReached之前的临界值，单位是像素\r\n        onEndReached={this.index.bind(this)} // 上拉加载事件\r\n      />\r\n    )\r\n  }\r\n  componentDidMount(){\r\n    this.index();\r\n  }\r\n  index(){\r\n    const self = this;\r\n    let getUrl = '/';\r\n    let params = {}\r\n    if(this.props.getType === 'all'){\r\n      getUrl = \"https://cnodejs.org/api/v1/topics\";\r\n      params = {\r\n        page: self.state.pageCurrent, \r\n        limit: 20\r\n      };\r\n    } else if(this.props.getType === 'collect') {\r\n      getUrl = \"https://cnodejs.org/api/v1/topic_collect/QxGh\"\r\n    };\r\n    axios.get(getUrl, {params})\r\n    .then((res)=>{\r\n      if(res.data.success){\r\n        let newPageCurrent = self.state.pageCurrent + 1;\r\n        let newListData = self.state.listData.concat(res.data.data);\r\n        self.setState({\r\n          pageCurrent: newPageCurrent,\r\n          listData: newListData\r\n        });\r\n        self.setState({\r\n          dataSource: self.state.dataSource.cloneWithRows(self.state.listData),\r\n          isLoading: false\r\n        })\r\n      }\r\n    })\r\n    .catch((error)=>{\r\n      Toast.offline('服务器出小差了！', 3);\r\n    })\r\n  }\r\n  listClick(row){\r\n    let id = row.id;\r\n    this.props.history.push({pathname:\"/view\",state: {id}});\r\n  }\r\n}\r\n\r\nexport default withRouter(List);","import React, { Component } from 'react';\r\nimport List from '../components/List'\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"home-container\" className=\"container\">\r\n        <List getType=\"all\" routerParmes={this.props}></List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport List from '../components/List'\r\n\r\nclass Hot extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"like-container\" className=\"container\">\r\n        <List getType=\"collect\" routerParmes={this.props}></List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hot;\r\n","const defaultState = {\r\n  number: 100,\r\n  login_name: 'QxGH'\r\n};\r\n\r\n//reducer可以接收state，但是绝不能修改state\r\n// reducer必须是纯函数\r\n//纯函数：给固定的输入，一定有固定的输出（不能有不固定的日期函数），不会有副作用（改变参数的值）\r\nexport default (state = defaultState, action) => {\r\n  //input\r\n  if (action.type === 'add_number') {\r\n    const newState = JSON.parse(JSON.stringify(state)); //简单的深拷贝\r\n    newState.number++;\r\n    return newState;\r\n  };\r\n\r\n  //button\r\n  if (action.type === \"sub_number\") {\r\n    const newState = JSON.parse(JSON.stringify(state)); //简单的深拷贝\r\n    newState.number--;\r\n    return newState;\r\n  };\r\n\r\n  return state;\r\n}","import {createStore} from 'redux';\r\nimport reducer from './reducer';\r\n \r\n \r\n//1-store是唯一的\r\n//2-只有store才能改变自己的内容（state）\r\n//3-reducer必须是纯函数\r\nconst store = createStore(\r\n    reducer,\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    // /如果安装了redeux devtools扩展这个工具（谷歌商店里下载），则在控制台里使用这个方法（为了调试redux）\r\n);\r\nexport default store;","import React, { Component } from 'react';\r\nimport store from '../store/index';\r\nimport axios from 'axios'\r\nimport { Toast } from 'antd-mobile';\r\n\r\nclass My extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    // this.state = store.getState();  //获取store里的所有关于state的数据\r\n    //监听store里面的变化，只要一变化\r\n    //只要store里面的数据发生改变，则立即执行subscribe函数里的函数\r\n    store.subscribe(this.handleStoreChange);\r\n    this.state = {\r\n      avatar: '',\r\n      store: store.getState()\r\n    }\r\n  }\r\n  render() {\r\n    let avatar = null;\r\n    if(this.state.avatar){\r\n      avatar = <img className=\"avatar\" src={this.state.avatar} alt=\"头像\" />\r\n    }\r\n    return (\r\n      <div id=\"my-container\">\r\n        <div className=\"user-card\">\r\n          <div className=\"card-box\">\r\n            <div className=\"avatar-box\">\r\n              {avatar}\r\n            </div>\r\n            <div className=\"name-box\">\r\n              <span className=\"name\">{this.state.store.login_name}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  //reducer返回newState之后，store传递newState给组件\r\n  handleStoreChange = () => {\r\n    this.setState({\r\n      store: store.getState()\r\n    });\r\n    // console.log('store change')\r\n    // 感知store发生变化之后，从store里获取最新的数据，然后进行设置\r\n  };\r\n  componentDidMount(){\r\n    this.index()\r\n  };\r\n  index(){\r\n    let loginName = this.state.store.login_name;\r\n    let url = 'https://cnodejs.org/api/v1/user/'+loginName\r\n    axios.get(url)\r\n    .then((res)=>{\r\n      console.log(res.data.data)\r\n      if(res.data.success === true){\r\n        this.setState({\r\n          avatar: res.data.data.avatar_url\r\n        })\r\n      } else {\r\n        Toast.offline('服务器出小差了！', 3);\r\n      }\r\n    })\r\n    .catch((error)=>{\r\n      alert(\"error!\")\r\n    })\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default My;\r\n","\r\nimport App from './../App';\r\nimport Home from '../containers/Home';\r\nimport Like from '../containers/Like';\r\nimport My from '../containers/My';\r\nimport View from '../containers/View';\r\n\r\nimport React from 'react';\r\nimport { Switch, Route, BrowserRouter, Redirect } from 'react-router-dom';\r\n\r\nconst RouterRoot = () => (\r\n  <BrowserRouter>\r\n    <App>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home}/>\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/like\" component={Like} />\r\n        <Route path=\"/my\" component={My} />\r\n        <Route path=\"/view\" component={View} />\r\n        <Route path=\"/\" render={() => {return <Redirect to=\"/\" />}} />\r\n      </Switch>\r\n    </App>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default RouterRoot;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/common.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport RouterRoot from './router/index';\n\nReactDOM.render(\n  <RouterRoot></RouterRoot>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}